#BlueJ class context
comment0.target=Escritor
comment0.text=\r\n\ La\ clase\ Escritor\ proporciona\ m\u00C3\u00A9todos\ para\ escribir\ en\ un\ archivo,\ leer\ desde\ un\ archivo,\r\n\ limpiar\ un\ archivo,\ leer\ la\ \u00C3\u00BAltima\ l\u00C3\u00ADnea\ de\ un\ archivo,\ buscar\ por\ un\ valor\ espec\u00C3\u00ADfico\ en\ un\ archivo,\r\n\ actualizar\ valores\ en\ un\ archivo\ y\ eliminar\ l\u00C3\u00ADneas\ que\ contienen\ un\ valor\ espec\u00C3\u00ADfico\ en\ un\ archivo.\r\n
comment1.params=archivo
comment1.target=Escritor(java.lang.String)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ Escritor.\r\n\r\n\ @param\ archivo\ Nombre\ del\ archivo\ en\ el\ que\ se\ realizar\u00C3\u00A1n\ las\ operaciones\ de\ escritura\ y\ lectura.\r\n
comment2.params=contenido
comment2.target=void\ escribir(java.lang.String)
comment2.text=\r\n\ Escribe\ una\ l\u00C3\u00ADnea\ en\ el\ archivo.\r\n\r\n\ @param\ contenido\ Contenido\ que\ se\ escribir\u00C3\u00A1\ en\ el\ archivo.\r\n
comment3.params=
comment3.target=java.util.ArrayList\ leerTodo()
comment3.text=\r\n\ Lee\ todo\ el\ contenido\ del\ archivo\ y\ lo\ devuelve\ como\ una\ lista\ de\ matrices\ de\ cadenas.\r\n\r\n\ @return\ ArrayList\ que\ contiene\ todas\ las\ l\u00C3\u00ADneas\ del\ archivo,\ donde\ cada\ l\u00C3\u00ADnea\ est\u00C3\u00A1\ representada\ como\ un\ arreglo\ de\ cadenas.\r\n
comment4.params=
comment4.target=void\ limpiar()
comment4.text=\r\n\ Elimina\ todo\ el\ contenido\ del\ archivo.\r\n
comment5.params=
comment5.target=java.lang.String\ leerUltimaLinea()
comment5.text=\r\n\ Lee\ la\ \u00C3\u00BAltima\ l\u00C3\u00ADnea\ del\ archivo.\r\n\r\n\ @return\ La\ \u00C3\u00BAltima\ l\u00C3\u00ADnea\ del\ archivo\ como\ una\ cadena.\r\n
comment6.params=valorBuscado
comment6.target=java.lang.String\ buscarPorValor(java.lang.String)
comment6.text=\r\n\ Busca\ una\ l\u00C3\u00ADnea\ que\ contenga\ el\ valor\ especificado\ en\ el\ archivo.\r\n\r\n\ @param\ valorBuscado\ Valor\ que\ se\ est\u00C3\u00A1\ buscando\ en\ el\ archivo.\r\n\ @return\ La\ primera\ l\u00C3\u00ADnea\ que\ contiene\ el\ valor\ buscado\ como\ una\ cadena\ completa.\r\n
comment7.params=valorAntiguo\ nuevoValor
comment7.target=void\ actualizar(java.lang.String,\ java.lang.String)
comment7.text=\r\n\ Actualiza\ todas\ las\ l\u00C3\u00ADneas\ que\ contienen\ el\ valor\ antiguo\ con\ el\ nuevo\ valor\ especificado.\r\n\r\n\ @param\ valorAntiguo\ Valor\ que\ se\ desea\ reemplazar\ en\ el\ archivo.\r\n\ @param\ nuevoValor\ \ \ Nuevo\ valor\ que\ se\ utilizar\u00C3\u00A1\ para\ reemplazar\ el\ valor\ antiguo.\r\n
comment8.params=valor
comment8.target=void\ eliminar(java.lang.String)
comment8.text=\r\n\ Elimina\ todas\ las\ l\u00C3\u00ADneas\ que\ contienen\ el\ valor\ especificado\ en\ el\ archivo.\r\n\r\n\ @param\ valor\ Valor\ que\ se\ desea\ eliminar\ del\ archivo.\r\n
comment9.params=
comment9.target=int\ contarElementos()
comment9.text=\r\n\ Cuenta\ el\ n\u00C3\u00BAmero\ de\ l\u00C3\u00ADneas\ en\ el\ archivo.\r\n\r\n\ @return\ N\u00C3\u00BAmero\ total\ de\ l\u00C3\u00ADneas\ en\ el\ archivo.\r\n
numComments=10
